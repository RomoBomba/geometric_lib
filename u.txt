#!/bin/bash

set -euo pipefail

file_name="$1"

if [ -z "$file_name" ]; then
    echo "Usage: $0 <filename>"
    exit 1
fi

TRASH_DIR="$HOME/.trash"
LOG_FILE="$HOME/.trash.log"

if [ ! -f "$LOG_FILE" ]; then
    echo "Trash log not found."
    exit 1
fi

found=false

while IFS= read -r line || [ -n "$line" ]; do 
    trash_name="${line##* }"
    file_path="${line% $trash_name}"
    cur_file_name="$(basename "$file_path")"
    dir="$(dirname "$file_path")"

    if [ "$cur_file_name" != "$file_name" ]; then
        continue
    fi

    found=true
    echo "Found: $file_path"

    # читаем ввод надёжно
    echo -n "Do you want to restore this file? [y/N] " > /dev/tty
    read -r response < /dev/tty

    case "$response" in
        [yY][eE][sS]|[yY])
            if [ ! -d "$dir" ]; then
                echo "Directory '$dir' not found. Restoring to home directory."
                dir="$HOME"
            fi

            target="$dir/$cur_file_name"
            if [ -f "$target" ]; then
                echo "File '$target' already exists."
                while true; do
                    echo -n "Please enter a new name: " > /dev/tty
                    read -r new_name < /dev/tty
                    target="$dir/$new_name"
                    if [ ! -e "$target" ]; then
                        break
                    fi
                    echo "File '$target' also exists." > /dev/tty
                done
            fi

            if [ ! -f "$TRASH_DIR/$trash_name" ]; then
                echo "Error: trash file '$trash_name' not found."
                break
            fi

            # восстанавливаем: ln если можно, иначе cp
            if ln "$TRASH_DIR/$trash_name" "$target" 2>/dev/null || cp "$TRASH_DIR/$trash_name" "$target"; then
                rm "$TRASH_DIR/$trash_name"
                sed -i "\|$file_path $trash_name\$|d" "$LOG_FILE"
                echo "File restored to '$target'"
            else
                echo "Error: failed to restore file."
            fi
            ;;
        * )
            echo "Skipping..."
            ;;
    esac
done < "$LOG_FILE"

if ! $found; then
    echo "No entries found for filename '$file_name'."
fi
