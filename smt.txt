import os
import sys
import subprocess
from llfuse import Operations, Request, FUSEError
from llfuse import init as fuse_init, main as fuse_main

class ConverterFS(Operations):
    def __init__(self, root):
        self.root = root

    def getattr(self, inode, ctx):
        path = self._inode_to_path(inode)
        st = os.lstat(path)
        return dict((key, getattr(st, key)) for key in ('st_mode', 'st_size'))

    def readdir(self, inode, offset):
        path = self._inode_to_path(inode)
        entries = [('.', None), ('..', None)]
        
        for entry in os.listdir(path):
            entries.append((entry, None))
            if entry.endswith('.png'):
                entries.append((entry.replace('.png', '.jpg'), None))
        return entries

    def open(self, inode, flags, ctx):
        path = self._inode_to_path(inode)
        if path.endswith('.jpg'):
            png_path = path.replace('.jpg', '.png')
            if os.path.exists(png_path):
                subprocess.run(['convert', png_path, path], check=True)
        return os.open(path, flags)

    def _inode_to_path(self, inode):
        # Упрощенная логика (реальный код должен учитывать inode)
        return os.path.join(self.root, str(inode))

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} <source_dir> <mount_dir>")
        sys.exit(1)

    fuse_init(
        ConverterFS(sys.argv[1]),
        sys.argv[2],
        ['-o', 'allow_other', '-o', 'fsname=converterfs']
    )
    try:
        fuse_main()
    finally:
        from llfuse import close as fuse_close
        fuse_close()
